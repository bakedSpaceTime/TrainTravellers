version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    volumes:
       - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: Kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka-ti-acit3855.eastus2.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka-ti-acit3855.eastus2.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'traintravellers'
      MYSQL_USER: 'train_user'
      MYSQL_PASSWORD: 'TrAiNtRaVeLlErs'
      MYSQL_ROOT_PASSWORD: 'N07-@-Tr@!n-U53r'
    ports:
      - '3306:3306'
    hostname: database
    networks:
      - traintravellers
    volumes:
      - my-db:/var/lib/mysql
  receiver:
    build:
      context: ../Receiver
      dockerfile: Dockerfile
    image: receiver:vt
    environment:
      - TARGET_ENV=test
    ports:
      - 8080:8080
    hostname: receiver
    networks:
      - traintravellers
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"
  storage:
    build:
      context: ../Storage
      dockerfile: Dockerfile
    image: storage:vt
    environment:
      - TARGET_ENV=test
    ports:
      - 8090:8090
    hostname: storage
    networks:
      - traintravellers
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"
      - "db"
  processing:
    build:
      context: ../Processing
      dockerfile: Dockerfile
    image: processing:vt
    environment:
      - TARGET_ENV=test
    ports:
      - 8100:8100
    hostname: processing
    networks:
      - traintravellers
    volumes:
      - /home/azureuser/config/processing:/config
      - /home/azureuser/logs:/logs
      - processing-db:/data
    depends_on:
      - "storage"
  audit:
    build:
      context: ../Audit
      dockerfile: Dockerfile
    image: audit:vt
    environment:
      - TARGET_ENV=test
    ports:
      - 8110:8100
    hostname: audit
    networks:
      - traintravellers
    volumes:
      - /home/azureuser/config/audit:/config
      - /home/azureuser/logs:/logs
    depends_on:
      - "kafka"
  dashboard:
    build:
      context: ../Dashboard-UI
      dockerfile: Dockerfile
    image: dashboard:vt
    ports:
      - "3000:3000"
    hostname: dashboard
    networks:
      - traintravellers
    depends_on:
      - "processing"
      - "audit"
networks:
  traintravellers: {}
volumes:
  my-db: {}
  processing-db: {}
